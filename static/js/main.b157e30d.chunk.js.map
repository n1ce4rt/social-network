{"version":3,"sources":["components/footer/footer.module.css","components/navigation/navigation.module.css","components/Main/main.module.css","components/Main/new_post/new_post.module.css","components/Main/Posts/posts.module.css","components/Main/title/title.module.css","components/testFormLogin/test_login_form.module.css","reducers/app_reducer.ts","api/api.js","reducers/auth_reducer.ts","components/login/loginModal.tsx","components/login/login.tsx","components/header/header.tsx","components/footer/footer.tsx","components/navigation/navigation.tsx","components/dialog/dialog.tsx","components/linearIndeterminate/linearIndeterminate.tsx","components/profile/profile.tsx","reducers/users_reducer.ts","hoc/WithAuthRedirect.tsx","reducers/post_reducer.ts","components/profile/profile_container.tsx","components/users/pagination/pagination.tsx","components/users/users.tsx","components/users/user_container.tsx","components/Main/new_post/BasicTextFields.tsx","components/iconLabelButtons/iconLabelButtons.tsx","components/Main/new_post/new_post.tsx","components/Main/Posts/post/post.tsx","components/Main/Posts/posts.tsx","components/status/profileStatus.tsx","components/Main/title/title.tsx","components/Main/main.tsx","components/Main/main_container.tsx","components/testFormLogin/test_form_login.tsx","components/app/app.tsx","reportWebVitals.ts","state/store-redux.tsx","index.tsx","components/dialog/dialog.module.css","components/users/users.module.css","components/login/loginModal.module.css","components/header/header.module.css","components/Main/Posts/post/post.module.css","components/app/app.module.css","components/login/login.module.css","components/profile/profile.module.css"],"names":["module","exports","initialAppState","status","setStatusAC","type","instance","axios","create","baseURL","withCredentials","headers","usersAPI","get","then","response","data","post","page","userId","delete","put","initialAuthState","email","id","login","isAuth","authMeAC","LoginModal","useState","setLogin","password","setPassword","dispatch","useDispatch","authHandler","e","preventDefault","resultCode","className","style","login_overlay","action","method","login_form","login_header","login_title","close","onClick","name","value","onChange","target","checkbox","Login","useSelector","state","authReducer","login_wrapper","login_btn","Header","useEffect","console","log","auth","header_wrapper","hidden","src","alt","auth_name","Footer","footer_wrapper","Navigation","usersReducer","currentPage","navigation_wrapper","to","Dialog","dialog_container","message","LinearIndeterminate","Box","sx","width","position","top","LinearProgress","Profile","profile","profileStatus","fullName","photos","large","FOLLOW","GET_USERS","SET_CURRENT_PAGE","GET_CURRENT_PROFILE","initialState","users","totalUserCount","isFetching","followingInProgress","getUsersAC","totalCounter","followingInProgressAC","getUsersTC","items","totalCount","MapStateToProps","withAuthRedirect","Component","connect","props","restProps","initialPostState","posts","like","setNewStatusAC","setStatusTC","ProfileContainer","this","getProfilerTC","match","params","React","WithCompose","compose","withRouter","appReducer","postReducer","PaginationOutlined","totalPages","Stack","spacing","Pagination","count","variant","event","disabled","Users","following","unFollowUserTC","followUserTC","users_container","page_btn_wrapper","map","user","user_wrapper","avatar","small","followed","some","btn_followed","btn_unfollowed","WithAuthRedirectContainer","appStatus","WithUrlDataUsers","BasicTextFields","setText","text","component","m","noValidate","autoComplete","TextField","label","currentTarget","onChangeHandler","color","ColorButtons","onClickHandler","direction","Button","New_post","new_post_wrapper","postText","v1","Post","post_container","post_btn","deletePostAC","deletePostHandler","Posts","posts_wrapper","el","ProfileStatus","editMode","editModeActivate","setState","editModeDeActivate","updateStatus","onStatusChange","prevProps","prevState","snapshot","onDoubleClick","onBlur","autoFocus","Title","title","Main","main_wrapper","MainContainer","updateStatusTC","witchConnect","validate","values","errors","length","test","TestFormLogin","formik","useFormik","initialValues","onSubmit","alert","JSON","stringify","handleSubmit","form_test","htmlFor","handleChange","checked","App","wrapper","app_wrapper","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","Math","floor","filter","store","createStore","applyMiddleware","ThunkMiddleware","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b157e30d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer_wrapper\":\"footer_footer_wrapper__2UwlJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation_wrapper\":\"navigation_navigation_wrapper__3f1Bp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_wrapper\":\"main_main_wrapper__qmCMr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"new_post_wrapper\":\"new_post_new_post_wrapper__2MCco\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts_wrapper\":\"posts_posts_wrapper__3xwrb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__2_xgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_wrapper\":\"test_login_form_form_wrapper__12Lmn\",\"form_test\":\"test_login_form_form_test__12IfD\"};","const SET_STATUS = 'SET_STATUS'\r\n\r\nconst initialAppState: initialAppStateType = {\r\n    status: 'nice'\r\n}\r\n\r\nexport const app_reducer = (state: initialAppStateType = initialAppState, action: appActionType): initialAppStateType => {\r\n    switch (action.type) {\r\n        case \"SET_STATUS\":\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const setStatusAC = (status: statusType): setStatusACType => ({type: SET_STATUS, status} as const)\r\n\r\nexport type initialAppStateType = {\r\n    status: statusType\r\n}\r\nexport type statusType = 'loading' | 'nice' | 'some'\r\n\r\nexport type appActionType = setStatusACType\r\n\r\nexport type setStatusACType = {\r\n    type: 'SET_STATUS'\r\n    status: statusType\r\n}","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create(\r\n    {\r\n        baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n        withCredentials: true,\r\n        headers: {'API-KEY': '493e0ed8-ad48-4808-991a-dd1092599ec9'}\r\n    }\r\n)\r\n\r\nexport const usersAPI = {\r\n\r\n    authMe() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    authorizeMe(data) {\r\n        return instance.post(`/auth/login`, {data}).then(response => response)\r\n    },\r\n    getUsers(page) {\r\n        return instance.get(`users?page=${page}&count=14`).then(response => response.data)\r\n    },\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`).then(response => response.data)\r\n    },\r\n    followUserApi(userId) {\r\n        return instance.post(`follow/${userId}`, {})\r\n    },\r\n    unfollowUserApi(userId) {\r\n        return instance.delete(`follow/${userId}`,)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get( `profile/status/${userId}`).then(response => response)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\n\r\n","import {setStatusAC} from \"./app_reducer\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\n\r\nexport type initialAuthStateType = {\r\n    email: string | null\r\n    id: number | null\r\n    login: string | null\r\n    isAuth: boolean\r\n}\r\nconst initialAuthState: initialAuthStateType = {\r\n    email: null,\r\n    id: null,\r\n    login: null,\r\n    isAuth: false,\r\n}\r\n\r\nexport const auth_reducer = (state:initialAuthStateType = initialAuthState, action: authMeACType):initialAuthStateType => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"AUTH_ME\":\r\n\r\n            return { ...state, ...action.data, isAuth: true }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\nexport type authMeACType = {\r\n    type: 'AUTH_ME'\r\n    data: initialAuthStateType\r\n}\r\nexport const authMeAC = (data: initialAuthStateType): authMeACType => ({type: 'AUTH_ME', data} as const)\r\n\r\n\r\n\r\nexport const authMeTC = () => {\r\n    return (dispatch : any) => {\r\n        dispatch(setStatusAC('loading'))\r\n\r\n        usersAPI.authMe()\r\n            .then((response) => {\r\n\r\n                if ( response.resultCode === 0)\r\n                    dispatch(authMeAC(response.data))\r\n                dispatch(setStatusAC('nice'))\r\n            })\r\n\r\n    }\r\n}\r\nexport const authorizeMeTC = (data: any) => {\r\n    return (dispatch : any) => {\r\n        dispatch(setStatusAC('loading'))\r\n        debugger\r\n        usersAPI.authorizeMe(data)\r\n            .then((response) => {\r\n                debugger\r\n                if ( response.data.resultCode === 0) {\r\n                    dispatch(authMeAC(response.data))\r\n                }\r\n                dispatch(setStatusAC('nice'))\r\n            })\r\n\r\n    }\r\n}","import style from './loginModal.module.css'\r\nimport React, {useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {authMeTC} from \"../../reducers/auth_reducer\";\r\n\r\n\r\n\r\nconst LoginModal =() => {\r\n\r\n    const [login, setLogin] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const authHandler =(e: any)=> {\r\n        e.preventDefault()\r\n        dispatch(authMeTC())\r\n    }\r\n\r\n    return (\r\n        <div className={style.login_overlay}>\r\n\r\n            <form action='' method='' className={style.login_form}>\r\n                <div className={style.login_header}>\r\n                    <h1 className={style.login_title}>LOGIN</h1>\r\n                    <button className={style.close} onClick={(e) => authHandler(e)}>X</button>\r\n                </div>\r\n                <input type='text' name='' value={login} onChange={(e:any) => setLogin(e.target.value)}></input>\r\n                <input type='password' name='' value={password} onChange={(e) => setPassword(e.target.value)}></input>\r\n                <div className={style.checkbox}>\r\n                    <input type={'checkbox'} value={'remember me'}/>Remember Me\r\n                </div>\r\n                <input type='submit' value='Sign in' onClick={(e: any)=> authHandler(e)}></input>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { LoginModal }\r\n","import style from './login.module.css'\r\nimport {LoginModal} from \"./loginModal\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducerType} from \"../../state/store-redux\";\r\n\r\n\r\nconst Login =() => {\r\n\r\n    const isAuth = useSelector<rootReducerType>(state => state.authReducer.isAuth)\r\n\r\n    return isAuth?\r\n        <div className={style.login_wrapper}>\r\n            <button className={style.login_btn}>Login</button>\r\n        </div> :\r\n        <LoginModal />\r\n\r\n}\r\n\r\nexport { Login }\r\n\r\n","import style from './header.module.css'\r\nimport {Login} from \"../login/login\";\r\nimport {useEffect} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducerType} from \"../../state/store-redux\";\r\n\r\nconst Header = () => {\r\n\r\n    useEffect(()=> {\r\n        console.log('Хедер отрисовалась')\r\n    },[])\r\n\r\n    const auth = useSelector<rootReducerType, string | null>(state => state.authReducer.login)\r\n    return (\r\n        <header className={style.header_wrapper}>\r\n            <div className={style.hidden}>\r\n                <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Unofficial_JavaScript_logo_2.svg/480px-Unofficial_JavaScript_logo_2.svg.png'  alt='logo'></img>\r\n            </div>\r\n            {\r\n                auth? <div className={style.auth_name}>{auth}</div> : <Login />\r\n            }\r\n        </header>\r\n    )\r\n}\r\nexport { Header };","import style from './footer.module.css'\r\n\r\nconst Footer = () => {\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <footer className={style.footer_wrapper}>\r\n              <div>Link1</div>\r\n              <div>Link2</div>\r\n              <div>Link3</div>\r\n              <div>Link4</div>\r\n              <div>Link5</div>\r\n        </footer>\r\n    )\r\n}\r\nexport { Footer }","import style from './navigation.module.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducerType} from \"../../state/store-redux\";\r\nimport {useEffect} from \"react\";\r\n\r\nconst Navigation = () => {\r\n    const page = useSelector<rootReducerType>(state => state.usersReducer.currentPage)\r\n    useEffect(() => {\r\n\r\n    }, [page])\r\n\r\n    return (\r\n        <nav className={style.navigation_wrapper}>\r\n            <div className='profile'><Link to='/main'>Profile</Link></div>\r\n\r\n            <div className='users'><Link to={`/users/${page}`}>Users</Link></div>\r\n\r\n            <div className='message'><Link to='/message'>Messages</Link></div>\r\n\r\n            <div className='news'><Link to='/news'>News</Link></div>\r\n\r\n            <div className='music'><Link to='/music'>Music</Link></div>\r\n\r\n            <div className='settings'><Link to='/settings'>Settings</Link></div>\r\n\r\n            <div className='test_login'><Link to='/test'>Test Login</Link></div>\r\n        </nav>\r\n    )\r\n}\r\nexport {Navigation}","import style from './dialog.module.css'\r\n\r\nconst Dialog =() => {\r\n\r\n\r\n    return (\r\n        <div className={style.dialog_container}>\r\n            \r\n            \r\n\r\n            <div className={style.name}>KASKDKSDAS</div>\r\n            <div className={style.message}>сообщения</div>\r\n\r\n            <div className={style.name}>имена</div>\r\n            <div className={style.message}>сообщения</div>\r\n\r\n            <div className={style.name}>имена</div>\r\n            <div className={style.message}>сообщения</div>\r\n        </div>\r\n    )\r\n}\r\nexport { Dialog }","\r\nimport Box from '@mui/material/Box';\r\nimport LinearProgress from '@mui/material/LinearProgress';\r\n\r\nexport default function LinearIndeterminate() {\r\n    return (\r\n        <Box sx={{ width: '100%' , position: 'absolute', top: '0'}}>\r\n        <LinearProgress />\r\n        </Box>\r\n    );\r\n}","\r\nimport {profileType} from \"../../reducers/users_reducer\";\r\nimport LinearIndeterminate from \"../linearIndeterminate/linearIndeterminate\";\r\nimport style from './profile.module.css'\r\nimport {statusType} from \"../../reducers/app_reducer\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\ntype propsType = {\r\n    status: statusType\r\n    profile: profileType | null\r\n    profileStatus?: string\r\n}\r\n\r\nexport const Profile = ({status, profile, profileStatus}: propsType) => {\r\n\r\n    useEffect(() => {\r\n        console.log(profileStatus)\r\n    },[])\r\n\r\n    if (status === 'loading') {\r\n\r\n        return (\r\n            <div className={style.profile}>\r\n                <LinearIndeterminate/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className={style.profile}>\r\n            {profile?.fullName}\r\n            <img src={profile?.photos.large} alt={'some img'}/>\r\n            <span>{profileStatus}</span>\r\n        </div>\r\n    )\r\n\r\n}","\r\nimport {usersAPI} from \"../api/api\";\r\nimport {setStatusAC} from \"./app_reducer\";\r\n\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst GET_USERS = 'GET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst GET_CURRENT_PROFILE = 'GET_CURRENT_PROFILE'\r\nconst FOLLOWING_IN_PROGRESS = 'FOLLOWING_IN_PROGRESS'\r\n\r\nconst initialState: initialStateType = {\r\n    users: [],\r\n    profile: null,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: [],\r\n}\r\n\r\nexport type actionType = followACType | getUsersACType | setCurrentPageACType | getProfileACType | followingInProgressACType;\r\n\r\nexport const users_reducer =(state: initialStateType = initialState, action: actionType): initialStateType => {\r\n\r\n    switch (action.type) {\r\n        case GET_USERS:\r\n            return {...state, users: [...action.users], currentPage: action.page, totalUserCount: Math.floor(action.totalCounter / 16 ) }\r\n        case FOLLOW:\r\n          return {...state, users: state.users.map(user => user.id === action.userId? {...user, followed : !user.followed}: user) }\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage }\r\n        case GET_CURRENT_PROFILE:\r\n            return  {...state, profile: action.profile}\r\n        case \"FOLLOWING_IN_PROGRESS\":\r\n            return {...state, followingInProgress: action.isFetching\r\n                    ?[...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !==action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const getUsersAC =(users: usersType[], page: number, totalCounter: number): getUsersACType => ( {type: GET_USERS, users, page, totalCounter} as const )\r\nexport const followingInProgressAC =(isFetching: boolean ,userId: number): followingInProgressACType => ( {type: FOLLOWING_IN_PROGRESS, userId, isFetching} as const)\r\nexport const followAC =(userId: number): followACType => ( {type: FOLLOW, userId} as const)\r\nexport const setCurrentPageAC =(currentPage: number): setCurrentPageACType => ({ type: SET_CURRENT_PAGE, currentPage} as const)\r\nexport const getProfileAC =(profile: profileType): getProfileACType => ({ type: GET_CURRENT_PROFILE, profile} as const)\r\n\r\n\r\nexport const getProfilerTC = (userId: number) => {\r\n    return (dispatch : any) => {\r\n        dispatch(setStatusAC('loading'))\r\n        usersAPI.getProfile(userId)\r\n\r\n            .then((response) => {\r\n                dispatch(getProfileAC(response))\r\n                dispatch(setStatusAC('nice'))\r\n            })\r\n\r\n    }\r\n}\r\nexport const getUsersTC = (page: number) => {\r\n    return (dispatch : any) => {\r\n        dispatch(setStatusAC('loading'))\r\n        usersAPI.getUsers(page)\r\n            .then((response) => {\r\n                dispatch(getUsersAC(response.items, page, response.totalCount))\r\n                dispatch(setStatusAC('nice'))\r\n                dispatch(setCurrentPageAC(page))\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const followUserTC = (userId: number, page: number) => {\r\n    return (dispatch : any) => {\r\n        dispatch(followingInProgressAC(true,userId))\r\n        dispatch(setStatusAC('loading'))\r\n        usersAPI.followUserApi(userId)\r\n        usersAPI.getUsers(page).then((response) => {\r\n                dispatch(getUsersAC(response.items, page, response.totalCount))\r\n                dispatch(setStatusAC('nice'))\r\n                dispatch(followingInProgressAC(false,userId))\r\n            })\r\n\r\n    }\r\n}\r\nexport const unFollowUserTC = (userId: number, page: number) => {\r\n    return (dispatch : any) => {\r\n        dispatch(followingInProgressAC(true,userId))\r\n        dispatch(setStatusAC('loading'))\r\n        usersAPI.unfollowUserApi(userId)\r\n        usersAPI.getUsers(page).then((response) => {\r\n            dispatch(getUsersAC(response.items, page, response.totalCount))\r\n            dispatch(setStatusAC('nice'))\r\n            dispatch(followingInProgressAC(false,userId))\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport type initialStateType = {\r\n    users: Array<usersType>\r\n    profile: profileType | null\r\n    totalUserCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: Array<number>\r\n}\r\ntype photosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type profileType = {\r\n    aboutMe: string,\r\n    contacts: {\r\n        facebook: string,\r\n        website: string,\r\n        vk: string,\r\n        twitter: string,\r\n        instagram: string,\r\n        youtube: string,\r\n        github: string,\r\n        mainLink: string,\r\n    },\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription:string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: photosType,\r\n\r\n}\r\nexport type usersType = {\r\n    id: number\r\n    name: string\r\n    status?: string\r\n    photos: photosType\r\n    followed: boolean\r\n}\r\nexport type followingInProgressACType = {\r\n    type: 'FOLLOWING_IN_PROGRESS',\r\n    userId: number\r\n    isFetching: boolean\r\n}\r\nexport type getUsersACType = {\r\n    type: 'GET_USERS'\r\n    users: usersType[]\r\n    page: number\r\n    totalCounter: number\r\n\r\n}\r\nexport type getProfileACType = {\r\n    type: 'GET_CURRENT_PROFILE',\r\n    profile: profileType\r\n}\r\nexport type followACType = {\r\n    type: 'FOLLOW'\r\n    userId: number\r\n}\r\nexport type setCurrentPageACType = {\r\n    type: 'SET_CURRENT_PAGE'\r\n    currentPage: number\r\n}\r\n","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {rootReducerType} from \"../state/store-redux\";\r\n\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\nconst MapStateToProps =(state: rootReducerType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.authReducer.isAuth,\r\n    }\r\n}\r\n\r\n\r\nexport function withAuthRedirect<T>(Component : ComponentType<T>)  {\r\n\r\n\r\n    const RedirectComponent =(props: mapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        // if (!isAuth) return <Redirect to={'login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n\r\n    }\r\n\r\n\r\n    let ConnectedRedirectComponent = connect(MapStateToProps,{})(RedirectComponent)\r\n\r\n  return ConnectedRedirectComponent;\r\n}","import {usersAPI} from \"../api/api\";\r\n\r\nconst CREATE_POST = 'CREATE_POST'\r\nconst DELETE_POST = 'DELETE_POST'\r\n\r\nconst initialPostState: initialPostStateType = {\r\n    posts: [\r\n        {message: 'Привет.', id: '1', like: 0},\r\n        {message: 'Я тут!', id: '2', like: 0},\r\n        {message: 'Мои первые посты', id: '3', like: 0},\r\n        {message: 'Лайки', id: '4', like: 0},\r\n        {message: 'Да', id: '5', like: 0},\r\n    ],\r\n    status: ''\r\n}\r\nexport const post_reducer = (state: initialPostStateType = initialPostState, action: actionType): initialPostStateType => {\r\n\r\n\r\n    switch (action.type) {\r\n        case \"CREATE_POST\":\r\n            debugger\r\n            return {...state, posts: [{message: action.postText, id: action.id, like: 0}, ...state.posts]}\r\n\r\n\r\n        case \"DELETE_POST\":\r\n            debugger\r\n            return {...state, posts: [...state.posts.filter(post => post.id !== action.id)]}\r\n\r\n        case \"SET_NEW_STATUS\":\r\n            return {...state, status: action.status}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const createNewPostAC = (postText: string, id: string): createNewPostACType => ({\r\n    type: CREATE_POST,\r\n    postText,\r\n    id\r\n} as const)\r\nexport const deletePostAC = (id: string): deletePostACType => ({type: DELETE_POST, id} as const)\r\nexport const setNewStatusAC = (status: string): setNewStatusACACType => ({type: 'SET_NEW_STATUS', status})\r\nexport const updateStatusAC = (status: string): updateStatusACType => ({type: 'UPDATE_STATUS', status})\r\n\r\nexport const setStatusTC = (userId: string) => {\r\n    return (dispatch: any) => {\r\n        usersAPI.getStatus(userId)\r\n            .then(response => {\r\n                    dispatch(setNewStatusAC(response.data))\r\n\r\n            })\r\n    }\r\n}\r\nexport const updateStatusTC = (status: string) => {\r\n    return (dispatch: any) => {\r\n        usersAPI.updateStatus(status).then(() => {\r\n            usersAPI.getStatus('21543')\r\n                .then(response => {\r\n                    debugger\r\n                    dispatch(setNewStatusAC(response.data))\r\n\r\n                })\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport type updateStatusACType = {\r\n    type: 'UPDATE_STATUS'\r\n    status: string\r\n}\r\nexport type initialPostStateType = {\r\n    posts: postsType\r\n    status?: string\r\n}\r\nexport type postsType = postType[]\r\nexport type postType = {\r\n    message: string\r\n    id: string\r\n    like: number\r\n}\r\nexport type actionType = createNewPostACType | deletePostACType | setNewStatusACACType\r\nexport type createNewPostACType = {\r\n    type: 'CREATE_POST'\r\n    postText: string\r\n    id: string\r\n}\r\nexport type deletePostACType = {\r\n    type: 'DELETE_POST'\r\n    id: string\r\n}\r\nexport type setNewStatusACACType = {\r\n    type: 'SET_NEW_STATUS'\r\n    status: string\r\n}","import React from \"react\";\r\nimport {Profile} from \"./profile\";\r\nimport {rootReducerType} from \"../../state/store-redux\";\r\nimport {getProfilerTC, profileType} from \"../../reducers/users_reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {statusType} from \"../../reducers/app_reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {setStatusTC } from \"../../reducers/post_reducer\";\r\n\r\nexport type profilePropsType = mapStateToPropsProfileType & mapDispatchToPropsProfileType\r\ntype PropsType = RouteComponentProps<PathParamsType> & profilePropsType\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\nexport type mapStateToPropsProfileType = {\r\n    profile: profileType | null\r\n    status: statusType\r\n    isAuth: boolean\r\n    profileStatus?: string\r\n}\r\nexport type mapDispatchToPropsProfileType = {\r\n    getProfilerTC: (userId: number) => void\r\n    setStatusTC : (userId: string) => void\r\n}\r\nconst mapStateToProps = (state: rootReducerType): mapStateToPropsProfileType => {\r\n    return {\r\n        profile: state.usersReducer.profile,\r\n        status: state.appReducer.status,\r\n        isAuth: state.authReducer.isAuth,\r\n        profileStatus: state.postReducer.status\r\n    }\r\n}\r\n\r\n\r\nexport class ProfileContainer extends React.Component<PropsType> {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getProfilerTC(+this.props.match.params.userId)\r\n        this.props.setStatusTC(this.props.match.params.userId)\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return <Profile\r\n            profile={this.props.profile}\r\n            status={this.props.status}\r\n            profileStatus={this.props.profileStatus}\r\n        />\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const WithCompose = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {getProfilerTC, setStatusTC}) as any,\r\n    withAuthRedirect)(ProfileContainer)","import * as React from 'react';\r\nimport Pagination from '@mui/material/Pagination';\r\nimport Stack from '@mui/material/Stack';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rootReducerType} from \"../../../state/store-redux\";\r\nimport {statusType} from \"../../../reducers/app_reducer\";\r\nimport {getUsersTC} from \"../../../reducers/users_reducer\";\r\n\r\n\r\ntype propsType = {\r\n    status: statusType\r\n    page: number\r\n}\r\n\r\nexport default function PaginationOutlined({status, page}: propsType) {\r\n    const dispatch = useDispatch()\r\n\r\n    const totalPages = useSelector<rootReducerType, number>((state)=> state.usersReducer.totalUserCount)\r\n    return (\r\n        <Stack spacing={2}>\r\n            <Pagination page={page} count={totalPages} variant=\"outlined\" onChange={(event, page)=>  dispatch(getUsersTC(page))} disabled={status === 'loading'}/>\r\n        </Stack>\r\n    );\r\n}","import style from './users.module.css'\r\nimport PaginationOutlined from \"./pagination/pagination\";\r\nimport {usersType} from \"../../reducers/users_reducer\";\r\nimport LinearIndeterminate from \"../linearIndeterminate/linearIndeterminate\";\r\nimport {Link} from 'react-router-dom'\r\nimport {statusType} from \"../../reducers/app_reducer\";\r\nimport {useEffect} from \"react\";\r\n\r\n\r\ntype propsType = {\r\n    users: Array<usersType>\r\n    status: statusType\r\n    page: number\r\n    following: Array<number>\r\n    followUserTC: (userId: number, page: number) => void\r\n    unFollowUserTC: (userId: number, page: number) => void\r\n}\r\n\r\n\r\nexport const Users = ({users, status, page, following, unFollowUserTC, followUserTC}: propsType) => {\r\n\r\n\r\n    useEffect(() => {\r\n        console.log('Юзеры отрисовались')\r\n    }, [page])\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={style.users_container}>\r\n\r\n            {status === 'loading' && <LinearIndeterminate/>}\r\n\r\n            <div className={style.page_btn_wrapper}>\r\n                <PaginationOutlined status={status} page={page}/>\r\n            </div>\r\n\r\n            {users.map((user: usersType) => {\r\n\r\n                return (\r\n\r\n                    <div key={user.id} className={style.user_wrapper}>\r\n\r\n                        <Link to={`/profile/${user.id}`}>\r\n                            <img alt='avatar' className={style.avatar} src={user.photos.small}/>\r\n                        </Link>\r\n                        <div className={style.name}>{user.name}</div>\r\n\r\n                        <button onClick={() => {\r\n                            user.followed ? unFollowUserTC(user.id, page) : followUserTC(user.id, page)\r\n                        }}\r\n                                disabled={following.some(id => id === user.id)}\r\n                                className={user.followed ? style.btn_followed : style.btn_unfollowed}>\r\n                            {user.followed ? 'UnFollow' : 'Follow'}\r\n                        </button>\r\n                    </div>)\r\n            })}\r\n        </div>\r\n    )\r\n}","import {connect} from \"react-redux\";\r\nimport {\r\n    usersType, getUsersTC, followUserTC, unFollowUserTC\r\n} from \"../../reducers/users_reducer\";\r\nimport {rootReducerType} from \"../../state/store-redux\";\r\nimport React from \"react\";\r\nimport {Users} from \"./users\";\r\nimport {statusType} from \"../../reducers/app_reducer\";\r\nimport { withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n    match: any\r\n}\r\nexport type usersPropsType = mapStateToPropsType & mapDispatchToPropsType & PathParamsType\r\n\r\nexport type mapStateToPropsType = {\r\n    totalUserCount: number\r\n    currentPage: number\r\n    users: Array<usersType>\r\n    appStatus: statusType\r\n    followingInProgress: Array<number>\r\n}\r\n\r\nconst mapStateToProps = (state: rootReducerType): mapStateToPropsType => {\r\n    return {\r\n        appStatus: state.appReducer.status,\r\n        users: state.usersReducer.users,\r\n        totalUserCount: state.usersReducer.totalUserCount,\r\n        currentPage: state.usersReducer.currentPage,\r\n        followingInProgress: state.usersReducer.followingInProgress,\r\n    }\r\n}\r\n\r\nexport type mapDispatchToPropsType = {\r\n    getUsersTC: (page: number) => void\r\n    followUserTC: (userId: number, page: number) => void\r\n    unFollowUserTC: (userId: number, page: number) => void\r\n}\r\n\r\n\r\nclass UsersContainer extends React.Component<usersPropsType> {\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.match.params.page)\r\n        this.props.getUsersTC(+this.props.match.params.page)\r\n    }\r\n\r\n    render() {\r\n        return <Users users={this.props.users}\r\n                      status={this.props.appStatus}\r\n                      page={this.props.currentPage}\r\n                      following={this.props.followingInProgress}\r\n                      followUserTC={this.props.followUserTC}\r\n                      unFollowUserTC={this.props.unFollowUserTC}\r\n        />\r\n\r\n    }\r\n}\r\nlet WithAuthRedirectContainer = withAuthRedirect(UsersContainer)\r\n\r\n\r\nexport const WithUrlDataUsers = withRouter(connect(mapStateToProps, {getUsersTC,followUserTC,unFollowUserTC})(WithAuthRedirectContainer) as any);\r\n\r\n\r\n// let WithCompose = compose(\r\n//     withRouter,\r\n//     connect(mapStateToProps, {getUsersTC,followUserTC,unFollowUserTC}) as any,\r\n//     withAuthRedirect\r\n// )(UsersContainer)\r\n\r\n// export default WithCompose","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport {ChangeEvent} from \"react\";\r\n\r\ntype setTextType = ChangeEvent<HTMLTextAreaElement| HTMLInputElement>\r\ntype propsType = {\r\n    setText:  (e: string) => void\r\n    text: string\r\n}\r\n\r\nexport default function BasicTextFields({setText, text}: propsType) {\r\n\r\n    const onChangeHandler =(e: setTextType) => {\r\n        setText(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <Box component=\"form\" sx={{'& > :not(style)': { m: 1, width: '25ch'},}} noValidate autoComplete=\"off\">\r\n\r\n            <TextField id=\"outlined-basic\" label=\"Шо там?\" variant=\"outlined\" onChange={(e: setTextType) => onChangeHandler(e)} value={text} color={'error'} />\r\n\r\n        </Box>\r\n);\r\n}","import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\n\r\ntype propsType = {\r\n    onClick: ()=> void\r\n    setText: (e: string) => void\r\n}\r\n\r\nexport default function ColorButtons({onClick, setText}: propsType) {\r\n\r\n    const onClickHandler =() => {\r\n        onClick()\r\n        setText('')\r\n    }\r\n    return (\r\n        <Stack direction=\"row\" spacing={2}>\r\n            <Button variant=\"contained\" color=\"error\" onClick={()=> onClickHandler()}>\r\n                Send\r\n            </Button>\r\n        </Stack>\r\n    );\r\n}","import {useState} from \"react\";\r\nimport style from './new_post.module.css'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setStatusAC} from \"../../../reducers/app_reducer\";\r\n\r\nimport BasicTextFields from \"./BasicTextFields\";\r\nimport ColorButtons from \"../../iconLabelButtons/iconLabelButtons\";\r\nimport {createNewPostAC} from \"../../../reducers/post_reducer\";\r\nimport {v1} from 'uuid'\r\n\r\nconst New_post =() => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [text, setText] = useState<string>('')\r\n\r\n    const onClickHandler =() => {\r\n        dispatch(setStatusAC('loading'))\r\n        dispatch(createNewPostAC( text, v1() ))\r\n        dispatch(setStatusAC('nice'))\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={style.new_post_wrapper}>\r\n            <BasicTextFields text={text}  setText={setText}/>\r\n            <ColorButtons onClick={onClickHandler} setText={setText}/>\r\n        </div>\r\n    )\r\n}\r\nexport { New_post }","import style from './post.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {rootReducerType} from \"../../../../state/store-redux\";\r\nimport {deletePostAC} from \"../../../../reducers/post_reducer\";\r\ntype propsType = {\r\n    text: string\r\n    id: string\r\n}\r\nexport const Post =({text,id}: propsType) => {\r\n\r\n    const posts = useSelector<rootReducerType>(state => state.postReducer.posts)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const deletePostHandler = (id: string) => {\r\n        dispatch(deletePostAC(id))\r\n\r\n    }\r\n    return (\r\n        <div className={style.post_container}>\r\n            <p className={style.post}>{text}</p>\r\n            <button type={\"button\"} className={style.post_btn} onClick={()=> deletePostHandler(id) }>X</button>\r\n        </div>\r\n    )\r\n}","import { Post } from \"./post/post\"\r\n\r\nimport style from './posts.module.css'\r\nimport {useSelector} from \"react-redux\";\r\nimport {rootReducerType} from \"../../../state/store-redux\";\r\nimport {postType} from \"../../../reducers/post_reducer\";\r\n\r\n\r\nconst Posts =() => {\r\n\r\n    let posts = useSelector<rootReducerType , postType[]>((state) => state.postReducer.posts)\r\n\r\n\r\n    return (\r\n        <div className={style.posts_wrapper}>\r\n            {posts.map((el: postType) => {\r\n               return <Post key={el.id} text={el.message} id={el.id}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nexport { Posts }","import React, {ChangeEvent} from \"react\";\r\n\r\n\r\nexport class ProfileStatus extends React.Component<any, any> {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n    editModeActivate =() => {\r\n        this.setState({editMode: true})\r\n    }\r\n    editModeDeActivate =() => {\r\n        this.setState({editMode: false})\r\n        this.props.updateStatus(this.state.status)\r\n    }\r\n    onStatusChange =(e: ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<any>, snapshot?: any) {\r\n        if (prevProps.profileStatus !== this.props.profileStatus) {\r\n            this.setState({\r\n                status: this.props.profileStatus\r\n            })\r\n            console.log(prevProps.profileStatus)\r\n            console.log('ok')\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={() => this.editModeActivate()}>{this.props.profileStatus}</span>\r\n                    </div>\r\n                }\r\n                {this.state.editMode &&\r\n                    <div>\r\n                    <input onBlur={() => this.editModeDeActivate()} type={'text'} value={this.state.status} autoFocus={true} onChange={(e) => this.onStatusChange(e)}/>\r\n                    </div>\r\n\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}","import style from './title.module.css'\r\nimport {ProfileStatus} from \"../../status/profileStatus\";\r\n\r\ntype propsType = {\r\n    profileStatus: string\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\nconst Title = ({profileStatus, updateStatus}: propsType) => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <img className={style.title} src='' alt='tyt kartinka'></img>\r\n            <ProfileStatus profileStatus={profileStatus} updateStatus={updateStatus}/>\r\n        </>\r\n\r\n    )\r\n}\r\nexport {Title}","import style from './main.module.css'\r\nimport { New_post } from './new_post/new_post'\r\nimport { Posts } from './Posts/posts'\r\nimport { Title } from './title/title'\r\n\r\nexport type PropsType = {\r\n    updateStatus: (status: string) => void\r\n    profileStatus: string\r\n\r\n}\r\nconst Main = ({updateStatus, profileStatus}: PropsType) => {\r\n\r\n\r\n    return (\r\n        <main className={style.main_wrapper}>\r\n            <Title\r\n                profileStatus={profileStatus}\r\n                updateStatus={updateStatus}\r\n            />\r\n            <New_post />\r\n            <Posts />\r\n        </main>\r\n    )\r\n}\r\nexport { Main }","import React from \"react\";\r\nimport { Main } from \"./main\";\r\nimport {connect} from \"react-redux\";\r\nimport {rootReducerType} from \"../../state/store-redux\";\r\nimport {setStatusTC, updateStatusTC} from \"../../reducers/post_reducer\";\r\n\r\n\r\nexport type mainPropsType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nexport type mapDispatchToPropsType = {\r\n    setStatusTC: (userId: string) => void\r\n    updateStatusTC: (status: string) => void\r\n\r\n}\r\nexport type mapStateToPropsType = {\r\n    profileStatus: string\r\n}\r\nconst mapStateToProps = (state: rootReducerType): mapStateToPropsType => {\r\n   return  {\r\n        profileStatus: state.postReducer.status as string\r\n    }\r\n}\r\nclass MainContainer extends React.Component<mainPropsType>  {\r\n\r\n    componentDidMount() {\r\n        console.log('Меин отрисовалась')\r\n        this.props.setStatusTC(`21543`)\r\n    }\r\n\r\n\r\n    render() {\r\n        return <Main\r\n            updateStatus={this.props.updateStatusTC}\r\n            profileStatus={this.props.profileStatus}\r\n\r\n        />\r\n    }\r\n}\r\n\r\nexport const witchConnect = connect(mapStateToProps, {setStatusTC,updateStatusTC})(MainContainer)","import React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport style from './test_login_form.module.css'\r\nimport {authorizeMeTC} from \"../../reducers/auth_reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n// A custom validation function. This must return an object\r\n// which keys are symmetrical to our values/initialValues\r\nconst validate = (values: { email: string; password: string | []; checkbox : boolean}) => {\r\n    const errors: any = {};\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required';\r\n    } else if (values.password.length > 15) {\r\n        errors.password = 'Must be 15 characters or less';\r\n    }\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n\r\n    return errors;\r\n};\r\n\r\nexport const TestFormLogin = () => {\r\n    const dispatch = useDispatch()\r\n    // Pass the useFormik() hook initial form values, a validate function that will be called when\r\n    // form values change or fields are blurred, and a submit function that will\r\n    // be called when the form is submitted\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            checkbox: false,\r\n        },\r\n        validate,\r\n        onSubmit: values => {\r\n            alert(JSON.stringify(values, null, 2));\r\n            console.log( values )\r\n            dispatch(authorizeMeTC(values))\r\n        },\r\n    });\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className={style.form_test}>\r\n\r\n\r\n            <label htmlFor=\"email\">Email Address</label>\r\n            <input\r\n                id=\"email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.email}\r\n            />\r\n            {formik.errors.email ? <div>{formik.errors.email}</div> : null}\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n                id=\"password\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n            />\r\n            {formik.errors.password ? <div>{formik.errors.password}</div> : null}\r\n            <label htmlFor=\"checkbox\">Password</label>\r\n            <input\r\n                id=\"checkbox\"\r\n                name=\"checkbox\"\r\n                type=\"checkbox\"\r\n                onChange={formik.handleChange}\r\n                checked={formik.values.checkbox}\r\n            />\r\n            {/*{formik.errors.email ? <div>{formik.errors.email}</div> : null}*/}\r\n\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};","import style from './app.module.css';\nimport {Header} from '../header/header';\nimport {Main} from '../Main/main';\nimport {Footer} from '../footer/footer'\nimport {Navigation} from '../navigation/navigation';\nimport {Dialog} from '../dialog/dialog';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport {Route} from 'react-router-dom'\nimport {WithCompose} from \"../profile/profile_container\";\nimport {WithUrlDataUsers} from \"../users/user_container\";\nimport {LoginModal} from \"../login/loginModal\";\nimport { witchConnect} from \"../Main/main_container\";\nimport {TestFormLogin} from \"../testFormLogin/test_form_login\";\n\n\nfunction App() {\n\n    return (\n        <Router>\n            <div className={style.wrapper}>\n                <Header/>\n                <div className={style.app_wrapper}>\n                    <Navigation/>\n                    <Route path='/main' component={witchConnect}/>\n                    <Route path='/profile/:userId' component={WithCompose}/>\n                    <Route exact path='/news' component={Dialog}/>\n                    <Route exact path='/music' component={Dialog}/>\n                    <Route exact path='/settings' component={Dialog}/>\n                    <Route exact path='/message' component={Dialog}/>\n                    <Route path='/users/:page' component={WithUrlDataUsers}/>\n                    <Route path='/login' component={LoginModal}/>\n                    <Route path='/test' component={TestFormLogin}/>\n                </div>\n                <Footer/>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport { users_reducer } from \"../reducers/users_reducer\";\r\nimport { post_reducer } from \"../reducers/post_reducer\";\r\nimport {app_reducer} from \"../reducers/app_reducer\";\r\nimport {auth_reducer} from \"../reducers/auth_reducer\";\r\nimport ThunkMiddleware from 'redux-thunk'\r\n\r\nconst rootReducers = combineReducers( {\r\n    usersReducer: users_reducer,\r\n    postReducer: post_reducer,\r\n    appReducer: app_reducer,\r\n    authReducer: auth_reducer\r\n});\r\n\r\nexport const store = createStore(rootReducers,applyMiddleware(ThunkMiddleware));\r\n\r\n\r\nexport type rootReducerType = ReturnType<typeof rootReducers>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/app';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport {store} from './state/store-redux'\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_container\":\"dialog_dialog_container__8KOcW\",\"name\":\"dialog_name__6i-Rw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_container\":\"users_users_container__3_UoG\",\"page_btn_wrapper\":\"users_page_btn_wrapper__3N9GC\",\"user_wrapper\":\"users_user_wrapper__1QhUn\",\"avatar\":\"users_avatar__1RmfS\",\"name\":\"users_name__3Mzwz\",\"btn_followed\":\"users_btn_followed__3Gfk2\",\"btn_unfollowed\":\"users_btn_unfollowed__3jwb-\",\"page_btn\":\"users_page_btn__2a2po\",\"page_btn_active\":\"users_page_btn_active__1FFMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_overlay\":\"loginModal_login_overlay__azyr9\",\"login_form\":\"loginModal_login_form__1sexX\",\"login_header\":\"loginModal_login_header__2-JMg\",\"close\":\"loginModal_close__h77cA\",\"login_title\":\"loginModal_login_title__1CmNU\",\"checkbox\":\"loginModal_checkbox__1R6Uo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header_wrapper\":\"header_header_wrapper__3v12y\",\"auth_name\":\"header_auth_name__1YFht\",\"hidden\":\"header_hidden__2kqc1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post_container\":\"post_post_container__1ITmR\",\"post\":\"post_post__G8jf0\",\"post_btn\":\"post_post_btn__2amHW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"app_wrapper__3CV2Z\",\"app_wrapper\":\"app_app_wrapper__2aqHH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_btn\":\"login_login_btn__2OzfT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__2jhxW\"};"],"sourceRoot":""}